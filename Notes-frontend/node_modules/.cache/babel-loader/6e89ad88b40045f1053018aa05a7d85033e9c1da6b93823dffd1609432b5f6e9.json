{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\New\\\\NotesApp\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport API from '../api/api';\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const handleLogin = async formData => {\n    if (!formData.email || !formData.password) {\n      alert('Please fill in both email and password.');\n      return;\n    }\n    try {\n      const {\n        data\n      } = await API.post('/auth/login', formData); // API call to backend\n      localStorage.setItem('token', data.token); // Save token in localStorage\n      navigate('/dashboard'); // Redirect to dashboard\n    } catch (error) {\n      var _error$response, _error$response2;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 404) {\n        alert('Email not registered. Redirecting to the signup page...');\n        navigate('/signup');\n      } else if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 400) {\n        alert('Invalid credentials. Please try again.');\n      } else {\n        var _error$response3;\n        console.error('Login failed:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n        alert('An unexpected error occurred. Please try again later.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(AuthForm, {\n      onSubmit: handleLogin,\n      isSignup: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useNavigate","API","AuthForm","jsxDEV","_jsxDEV","LoginPage","_s","navigate","handleLogin","formData","email","password","alert","data","post","localStorage","setItem","token","error","_error$response","_error$response2","response","status","_error$response3","console","message","className","children","onSubmit","isSignup","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/New/NotesApp/frontend/src/pages/LoginPage.js"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport API from '../api/api';\r\nimport AuthForm from '../components/AuthForm';\r\n\r\nconst LoginPage = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogin = async (formData) => {\r\n        if (!formData.email || !formData.password) {\r\n            alert('Please fill in both email and password.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const { data } = await API.post('/auth/login', formData); // API call to backend\r\n            localStorage.setItem('token', data.token); // Save token in localStorage\r\n            navigate('/dashboard'); // Redirect to dashboard\r\n        } catch (error) {\r\n            if (error.response?.status === 404) {\r\n                alert('Email not registered. Redirecting to the signup page...');\r\n                navigate('/signup');\r\n            } else if (error.response?.status === 400) {\r\n                alert('Invalid credentials. Please try again.');\r\n            } else {\r\n                console.error('Login failed:', error.response?.data || error.message);\r\n                alert('An unexpected error occurred. Please try again later.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex items-center justify-center h-screen bg-gray-100\">\r\n            <AuthForm onSubmit={handleLogin} isSignup={false} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,GAAG,MAAM,YAAY;AAC5B,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,WAAW,GAAG,MAAOC,QAAQ,IAAK;IACpC,IAAI,CAACA,QAAQ,CAACC,KAAK,IAAI,CAACD,QAAQ,CAACE,QAAQ,EAAE;MACvCC,KAAK,CAAC,yCAAyC,CAAC;MAChD;IACJ;IAEA,IAAI;MACA,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMZ,GAAG,CAACa,IAAI,CAAC,aAAa,EAAEL,QAAQ,CAAC,CAAC,CAAC;MAC1DM,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC;MAC3CV,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOW,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,gBAAA;MACZ,IAAI,EAAAD,eAAA,GAAAD,KAAK,CAACG,QAAQ,cAAAF,eAAA,uBAAdA,eAAA,CAAgBG,MAAM,MAAK,GAAG,EAAE;QAChCV,KAAK,CAAC,yDAAyD,CAAC;QAChEL,QAAQ,CAAC,SAAS,CAAC;MACvB,CAAC,MAAM,IAAI,EAAAa,gBAAA,GAAAF,KAAK,CAACG,QAAQ,cAAAD,gBAAA,uBAAdA,gBAAA,CAAgBE,MAAM,MAAK,GAAG,EAAE;QACvCV,KAAK,CAAC,wCAAwC,CAAC;MACnD,CAAC,MAAM;QAAA,IAAAW,gBAAA;QACHC,OAAO,CAACN,KAAK,CAAC,eAAe,EAAE,EAAAK,gBAAA,GAAAL,KAAK,CAACG,QAAQ,cAAAE,gBAAA,uBAAdA,gBAAA,CAAgBV,IAAI,KAAIK,KAAK,CAACO,OAAO,CAAC;QACrEb,KAAK,CAAC,uDAAuD,CAAC;MAClE;IACJ;EACJ,CAAC;EAED,oBACIR,OAAA;IAAKsB,SAAS,EAAC,uDAAuD;IAAAC,QAAA,eAClEvB,OAAA,CAACF,QAAQ;MAAC0B,QAAQ,EAAEpB,WAAY;MAACqB,QAAQ,EAAE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEd,CAAC;AAAC3B,EAAA,CA/BID,SAAS;EAAA,QACML,WAAW;AAAA;AAAAkC,EAAA,GAD1B7B,SAAS;AAiCf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}