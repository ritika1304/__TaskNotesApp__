{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\New\\\\NotesApp\\\\frontend\\\\src\\\\pages\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport API from '../api/api'; // Import API to make requests\nimport Navbar from '../components/Navbar'; // Import the Navbar component\nimport NotesList from '../components/'; // Import the NotesList component\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for routing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  const [notes, setNotes] = useState([]); // Store the fetched notes\n  const [user, setUser] = useState(null); // Store user information\n  const navigate = useNavigate(); // Initialize useNavigate for routing\n\n  // Fetch notes and user profile on initial load\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const {\n          data\n        } = await API.get('/notes'); // Get notes from API\n        setNotes(data); // Store notes in state\n      } catch (error) {\n        var _error$response;\n        console.error('Failed to fetch notes:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      }\n    };\n    const fetchUserProfile = async () => {\n      try {\n        const {\n          data\n        } = await API.get('/profile'); // Fetch user profile\n        setUser(data); // Set user data to state\n      } catch (error) {\n        var _error$response2;\n        console.error('Failed to fetch user profile:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      }\n    };\n    fetchNotes(); // Fetch notes when the page loads\n    fetchUserProfile(); // Fetch user data when the page loads\n  }, []);\n\n  // Create note handler (navigates to the NoteEditorPage to create a new note)\n  const handleCreateNote = () => {\n    navigate('/create-note'); // Redirect to Create Note page\n  };\n\n  // Edit note handler (navigates to the NoteEditorPage to edit the note)\n  const handleEditNote = noteId => {\n    navigate(`/edit-note/${noteId}`); // Redirect to Edit Note page with noteId\n  };\n\n  // View note handler (navigates to the NoteEditorPage to view the note)\n  const handleViewNote = noteId => {\n    navigate(`/view-note/${noteId}`); // Redirect to View Note page with noteId\n  };\n\n  // Delete note handler (deletes a note by id)\n  const handleDeleteNote = async noteId => {\n    try {\n      await API.delete(`/notes/${noteId}`); // Call API to delete the note\n      setNotes(notes.filter(note => note._id !== noteId)); // Remove the deleted note from state\n      alert('Note deleted successfully!'); // Show success alert\n    } catch (error) {\n      var _error$response3;\n      console.error('Failed to delete note:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      alert('Failed to delete note. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold mb-6 text-gray-800\",\n        children: \"Your Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateNote,\n        className: \"bg-blue-600 text-white py-3 px-5 rounded mb-6 hover:bg-blue-700\",\n        children: \"+ Create New Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), notes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n        children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded shadow hover:shadow-lg transition\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-bold text-xl text-gray-700\",\n            children: note.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mt-2\",\n            children: note.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleViewNote(note._id),\n              className: \"text-blue-500 underline\",\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditNote(note._id),\n              className: \"text-green-500 underline\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteNote(note._id),\n              className: \"text-red-500 underline\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this)]\n        }, note._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 mt-4\",\n        children: \"No notes found. Create your first note!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardPage, \"UcgcTbQr7Q6usrWZg7/q5IVJg1k=\", false, function () {\n  return [useNavigate];\n});\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useEffect","useState","API","Navbar","NotesList","useNavigate","jsxDEV","_jsxDEV","DashboardPage","_s","notes","setNotes","user","setUser","navigate","fetchNotes","data","get","error","_error$response","console","response","message","fetchUserProfile","_error$response2","handleCreateNote","handleEditNote","noteId","handleViewNote","handleDeleteNote","delete","filter","note","_id","alert","_error$response3","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","length","map","title","content","_c","$RefreshReg$"],"sources":["C:/Users/New/NotesApp/frontend/src/pages/DashboardPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport API from '../api/api'; // Import API to make requests\r\nimport Navbar from '../components/Navbar'; // Import the Navbar component\r\nimport NotesList from '../components/'; // Import the NotesList component\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for routing\r\n\r\nconst DashboardPage = () => {\r\n    const [notes, setNotes] = useState([]); // Store the fetched notes\r\n    const [user, setUser] = useState(null); // Store user information\r\n    const navigate = useNavigate(); // Initialize useNavigate for routing\r\n\r\n    // Fetch notes and user profile on initial load\r\n    useEffect(() => {\r\n        const fetchNotes = async () => {\r\n            try {\r\n                const { data } = await API.get('/notes'); // Get notes from API\r\n                setNotes(data); // Store notes in state\r\n            } catch (error) {\r\n                console.error('Failed to fetch notes:', error.response?.data || error.message);\r\n            }\r\n        };\r\n\r\n        const fetchUserProfile = async () => {\r\n            try {\r\n                const { data } = await API.get('/profile'); // Fetch user profile\r\n                setUser(data); // Set user data to state\r\n            } catch (error) {\r\n                console.error('Failed to fetch user profile:', error.response?.data || error.message);\r\n            }\r\n        };\r\n\r\n        fetchNotes(); // Fetch notes when the page loads\r\n        fetchUserProfile(); // Fetch user data when the page loads\r\n    }, []);\r\n\r\n    // Create note handler (navigates to the NoteEditorPage to create a new note)\r\n    const handleCreateNote = () => {\r\n        navigate('/create-note'); // Redirect to Create Note page\r\n    };\r\n\r\n    // Edit note handler (navigates to the NoteEditorPage to edit the note)\r\n    const handleEditNote = (noteId) => {\r\n        navigate(`/edit-note/${noteId}`); // Redirect to Edit Note page with noteId\r\n    };\r\n\r\n    // View note handler (navigates to the NoteEditorPage to view the note)\r\n    const handleViewNote = (noteId) => {\r\n        navigate(`/view-note/${noteId}`); // Redirect to View Note page with noteId\r\n    };\r\n\r\n    // Delete note handler (deletes a note by id)\r\n    const handleDeleteNote = async (noteId) => {\r\n        try {\r\n            await API.delete(`/notes/${noteId}`); // Call API to delete the note\r\n            setNotes(notes.filter((note) => note._id !== noteId)); // Remove the deleted note from state\r\n            alert('Note deleted successfully!'); // Show success alert\r\n        } catch (error) {\r\n            console.error('Failed to delete note:', error.response?.data || error.message);\r\n            alert('Failed to delete note. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* Navbar */}\r\n            <Navbar user={user} />\r\n\r\n            {/* Main Content */}\r\n            <div className=\"p-6\">\r\n                <h2 className=\"text-3xl font-bold mb-6 text-gray-800\">Your Notes</h2>\r\n                \r\n                {/* Create Note Button */}\r\n                <button\r\n                    onClick={handleCreateNote}\r\n                    className=\"bg-blue-600 text-white py-3 px-5 rounded mb-6 hover:bg-blue-700\"\r\n                >\r\n                    + Create New Note\r\n                </button>\r\n\r\n                {/* Notes List */}\r\n                {notes.length > 0 ? (\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                        {notes.map((note) => (\r\n                            <div\r\n                                key={note._id}\r\n                                className=\"bg-white p-4 rounded shadow hover:shadow-lg transition\"\r\n                            >\r\n                                <h3 className=\"font-bold text-xl text-gray-700\">{note.title}</h3>\r\n                                <p className=\"text-gray-600 mt-2\">{note.content}</p>\r\n                                <div className=\"mt-4 flex justify-between\">\r\n                                    <button\r\n                                        onClick={() => handleViewNote(note._id)}\r\n                                        className=\"text-blue-500 underline\"\r\n                                    >\r\n                                        View\r\n                                    </button>\r\n                                    <button\r\n                                        onClick={() => handleEditNote(note._id)}\r\n                                        className=\"text-green-500 underline\"\r\n                                    >\r\n                                        Edit\r\n                                    </button>\r\n                                    <button\r\n                                        onClick={() => handleDeleteNote(note._id)}\r\n                                        className=\"text-red-500 underline\"\r\n                                    >\r\n                                        Delete\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                    <p className=\"text-gray-500 mt-4\">No notes found. Create your first note!</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}