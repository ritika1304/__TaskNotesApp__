{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\New\\\\NotesApp\\\\frontend\\\\src\\\\pages\\\\NoteEditorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport API from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteEditorPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // ID for editing an existing note\n  const navigate = useNavigate();\n  const [noteData, setNoteData] = useState({\n    title: '',\n    content: '',\n    category: ''\n  });\n  useEffect(() => {\n    if (id) {\n      // Fetch existing note details for editing\n      const fetchNote = async () => {\n        try {\n          const {\n            data\n          } = await API.get(`/notes/${id}`);\n          setNoteData(data);\n        } catch (error) {\n          var _error$response;\n          console.error('Failed to fetch note:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n        }\n      };\n      fetchNote();\n    }\n  }, [id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (id) {\n        // Update existing note\n        await API.put(`/notes/${id}`, noteData);\n        alert('Note updated successfully!');\n      } else {\n        // Create new note\n        await API.post('/notes', noteData);\n        alert('Note created successfully!');\n      }\n      navigate('/dashboard');\n    } catch (error) {\n      var _error$response2;\n      console.error('Failed to save note:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"bg-white p-6 rounded shadow-md w-80\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold mb-4\",\n        children: id ? 'Edit Note' : 'Create Note'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        className: \"w-full p-2 mb-4 border rounded\",\n        value: noteData.title,\n        onChange: e => setNoteData({\n          ...noteData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Content\",\n        className: \"w-full p-2 mb-4 border rounded\",\n        rows: \"4\",\n        value: noteData.content,\n        onChange: e => setNoteData({\n          ...noteData,\n          content: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Category\",\n        className: \"w-full p-2 mb-4 border rounded\",\n        value: noteData.category,\n        onChange: e => setNoteData({\n          ...noteData,\n          category: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white w-full py-2 rounded hover:bg-blue-600\",\n        children: id ? 'Update Note' : 'Create Note'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteEditorPage, \"YbZMVblMcGOyVZ8RiKOCL9mvriQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = NoteEditorPage;\nexport default NoteEditorPage;\nvar _c;\n$RefreshReg$(_c, \"NoteEditorPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","API","jsxDEV","_jsxDEV","NoteEditorPage","_s","id","navigate","noteData","setNoteData","title","content","category","fetchNote","data","get","error","_error$response","console","response","message","handleSubmit","e","preventDefault","put","alert","post","_error$response2","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","rows","_c","$RefreshReg$"],"sources":["C:/Users/New/NotesApp/frontend/src/pages/NoteEditorPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport API from '../api/api';\r\n\r\nconst NoteEditorPage = () => {\r\n    const { id } = useParams(); // ID for editing an existing note\r\n    const navigate = useNavigate();\r\n    const [noteData, setNoteData] = useState({ title: '', content: '', category: '' });\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            // Fetch existing note details for editing\r\n            const fetchNote = async () => {\r\n                try {\r\n                    const { data } = await API.get(`/notes/${id}`);\r\n                    setNoteData(data);\r\n                } catch (error) {\r\n                    console.error('Failed to fetch note:', error.response?.data || error.message);\r\n                }\r\n            };\r\n            fetchNote();\r\n        }\r\n    }, [id]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (id) {\r\n                // Update existing note\r\n                await API.put(`/notes/${id}`, noteData);\r\n                alert('Note updated successfully!');\r\n            } else {\r\n                // Create new note\r\n                await API.post('/notes', noteData);\r\n                alert('Note created successfully!');\r\n            }\r\n            navigate('/dashboard');\r\n        } catch (error) {\r\n            console.error('Failed to save note:', error.response?.data || error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex items-center justify-center h-screen bg-gray-100\">\r\n            <form onSubmit={handleSubmit} className=\"bg-white p-6 rounded shadow-md w-80\">\r\n                <h2 className=\"text-lg font-bold mb-4\">{id ? 'Edit Note' : 'Create Note'}</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Title\"\r\n                    className=\"w-full p-2 mb-4 border rounded\"\r\n                    value={noteData.title}\r\n                    onChange={(e) => setNoteData({ ...noteData, title: e.target.value })}\r\n                />\r\n                <textarea\r\n                    placeholder=\"Content\"\r\n                    className=\"w-full p-2 mb-4 border rounded\"\r\n                    rows=\"4\"\r\n                    value={noteData.content}\r\n                    onChange={(e) => setNoteData({ ...noteData, content: e.target.value })}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Category\"\r\n                    className=\"w-full p-2 mb-4 border rounded\"\r\n                    value={noteData.category}\r\n                    onChange={(e) => setNoteData({ ...noteData, category: e.target.value })}\r\n                />\r\n                <button className=\"bg-blue-500 text-white w-full py-2 rounded hover:bg-blue-600\">\r\n                    {id ? 'Update Note' : 'Create Note'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NoteEditorPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,GAAG,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAMO,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAElFd,SAAS,CAAC,MAAM;IACZ,IAAIQ,EAAE,EAAE;MACJ;MACA,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC1B,IAAI;UACA,MAAM;YAAEC;UAAK,CAAC,GAAG,MAAMb,GAAG,CAACc,GAAG,CAAC,UAAUT,EAAE,EAAE,CAAC;UAC9CG,WAAW,CAACK,IAAI,CAAC;QACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;UAAA,IAAAC,eAAA;UACZC,OAAO,CAACF,KAAK,CAAC,uBAAuB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACG,QAAQ,cAAAF,eAAA,uBAAdA,eAAA,CAAgBH,IAAI,KAAIE,KAAK,CAACI,OAAO,CAAC;QACjF;MACJ,CAAC;MACDP,SAAS,CAAC,CAAC;IACf;EACJ,CAAC,EAAE,CAACP,EAAE,CAAC,CAAC;EAER,MAAMe,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,IAAIjB,EAAE,EAAE;QACJ;QACA,MAAML,GAAG,CAACuB,GAAG,CAAC,UAAUlB,EAAE,EAAE,EAAEE,QAAQ,CAAC;QACvCiB,KAAK,CAAC,4BAA4B,CAAC;MACvC,CAAC,MAAM;QACH;QACA,MAAMxB,GAAG,CAACyB,IAAI,CAAC,QAAQ,EAAElB,QAAQ,CAAC;QAClCiB,KAAK,CAAC,4BAA4B,CAAC;MACvC;MACAlB,QAAQ,CAAC,YAAY,CAAC;IAC1B,CAAC,CAAC,OAAOS,KAAK,EAAE;MAAA,IAAAW,gBAAA;MACZT,OAAO,CAACF,KAAK,CAAC,sBAAsB,EAAE,EAAAW,gBAAA,GAAAX,KAAK,CAACG,QAAQ,cAAAQ,gBAAA,uBAAdA,gBAAA,CAAgBb,IAAI,KAAIE,KAAK,CAACI,OAAO,CAAC;IAChF;EACJ,CAAC;EAED,oBACIjB,OAAA;IAAKyB,SAAS,EAAC,uDAAuD;IAAAC,QAAA,eAClE1B,OAAA;MAAM2B,QAAQ,EAAET,YAAa;MAACO,SAAS,EAAC,qCAAqC;MAAAC,QAAA,gBACzE1B,OAAA;QAAIyB,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EAAEvB,EAAE,GAAG,WAAW,GAAG;MAAa;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9E/B,OAAA;QACIgC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,OAAO;QACnBR,SAAS,EAAC,gCAAgC;QAC1CS,KAAK,EAAE7B,QAAQ,CAACE,KAAM;QACtB4B,QAAQ,EAAGhB,CAAC,IAAKb,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEE,KAAK,EAAEY,CAAC,CAACiB,MAAM,CAACF;QAAM,CAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC,eACF/B,OAAA;QACIiC,WAAW,EAAC,SAAS;QACrBR,SAAS,EAAC,gCAAgC;QAC1CY,IAAI,EAAC,GAAG;QACRH,KAAK,EAAE7B,QAAQ,CAACG,OAAQ;QACxB2B,QAAQ,EAAGhB,CAAC,IAAKb,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEG,OAAO,EAAEW,CAAC,CAACiB,MAAM,CAACF;QAAM,CAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CAAC,eACF/B,OAAA;QACIgC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBR,SAAS,EAAC,gCAAgC;QAC1CS,KAAK,EAAE7B,QAAQ,CAACI,QAAS;QACzB0B,QAAQ,EAAGhB,CAAC,IAAKb,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEI,QAAQ,EAAEU,CAAC,CAACiB,MAAM,CAACF;QAAM,CAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC,eACF/B,OAAA;QAAQyB,SAAS,EAAC,8DAA8D;QAAAC,QAAA,EAC3EvB,EAAE,GAAG,aAAa,GAAG;MAAa;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAC7B,EAAA,CArEID,cAAc;EAAA,QACDJ,SAAS,EACPD,WAAW;AAAA;AAAA0C,EAAA,GAF1BrC,cAAc;AAuEpB,eAAeA,cAAc;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}