{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\New\\\\NotesApp\\\\frontend\\\\src\\\\pages\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport API from '../api/api';\nimport NotesList from '../components/NotesList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const {\n          data\n        } = await API.get('/notes');\n        setNotes(data);\n      } catch (error) {\n        var _error$response;\n        console.error('Failed to fetch notes:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      }\n    };\n    fetchNotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Your Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      notes: notes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardPage, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useEffect","useState","API","NotesList","jsxDEV","_jsxDEV","DashboardPage","_s","notes","setNotes","fetchNotes","data","get","error","_error$response","console","response","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/New/NotesApp/frontend/src/pages/DashboardPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport API from '../api/api';\r\nimport NotesList from '../components/NotesList';\r\n\r\nconst DashboardPage = () => {\r\n    const [notes, setNotes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchNotes = async () => {\r\n            try {\r\n                const { data } = await API.get('/notes');\r\n                setNotes(data);\r\n            } catch (error) {\r\n                console.error('Failed to fetch notes:', error.response?.data || error.message);\r\n            }\r\n        };\r\n        fetchNotes();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"p-6\">\r\n            <h2 className=\"text-2xl font-bold mb-6\">Your Notes</h2>\r\n            <NotesList notes={notes} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,YAAY;AAC5B,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,QAAQ,CAAC;QACxCH,QAAQ,CAACE,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QAAA,IAAAC,eAAA;QACZC,OAAO,CAACF,KAAK,CAAC,wBAAwB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACG,QAAQ,cAAAF,eAAA,uBAAdA,eAAA,CAAgBH,IAAI,KAAIE,KAAK,CAACI,OAAO,CAAC;MAClF;IACJ,CAAC;IACDP,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBd,OAAA;MAAIa,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvDlB,OAAA,CAACF,SAAS;MAACK,KAAK,EAAEA;IAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEd,CAAC;AAAChB,EAAA,CArBID,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AAuBnB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}