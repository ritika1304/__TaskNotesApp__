{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\New\\\\NotesApp\\\\frontend\\\\src\\\\pages\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport API from '../api/api'; // Import API to make requests\nimport Navbar from '../components/Navbar'; // Import the Navbar component\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for routing\nimport { FaEdit, FaTrashAlt } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  const [notes, setNotes] = useState([]); // Store the fetched notes\n  const [user, setUser] = useState(null); // Store user information\n  const navigate = useNavigate(); // Initialize useNavigate for routing\n\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const {\n          data\n        } = await API.get('/notes'); // Get notes from API\n        setNotes(data); // Store notes in state\n      } catch (error) {\n        var _error$response;\n        console.error('Failed to fetch notes:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      }\n    };\n    const fetchUserProfile = async () => {\n      try {\n        const {\n          data\n        } = await API.get('/profile'); // Fetch user profile\n        setUser(data); // Set user data to state\n      } catch (error) {\n        var _error$response2;\n        console.error('Failed to fetch user profile:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      }\n    };\n    fetchNotes(); // Fetch notes when the page loads\n    fetchUserProfile(); // Fetch user data when the page loads\n  }, []);\n  const handleNote = (noteId, title, content, category, isEditable) => {\n    console.log(title);\n    navigate(`/note/edit/${noteId}`, {\n      state: {\n        title,\n        content,\n        category,\n        isEditable\n      } // Pass the state object\n    }); // Redirect to Edit Note page\n  };\n  const handleDeleteNote = async noteId => {\n    if (window.confirm('Are you sure you want to delete this note?')) {\n      try {\n        await API.delete(`/notes/${noteId}`); // Call API to delete the note\n        setNotes(notes.filter(note => note._id !== noteId)); // Remove the deleted note from state\n        alert('Note deleted successfully!');\n      } catch (error) {\n        var _error$response3;\n        console.error('Failed to delete note:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n        alert('Failed to delete note. Please try again.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold mb-6 text-gray-800\",\n        children: \"Your Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNote,\n        className: \"bg-blue-600 text-white py-3 px-5 rounded mb-6 hover:bg-blue-700\",\n        children: \"+ Create New Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), console.log(JSON.stringify(notes)), notes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n        children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded shadow hover:shadow-lg transition\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-bold text-xl text-gray-700\",\n            children: note.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mt-2\",\n            children: note.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleNote(note._id, note.title, note.content, note.category, true),\n              className: \"text-green-500 hover:text-green-700\",\n              children: [/*#__PURE__*/_jsxDEV(FaEdit, {\n                className: \"inline-block text-xl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 5\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteNote(note._id),\n              className: \"text-red-500 underline\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this)]\n        }, note._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 mt-4\",\n        children: \"No notes found. Create your first note!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardPage, \"UcgcTbQr7Q6usrWZg7/q5IVJg1k=\", false, function () {\n  return [useNavigate];\n});\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useEffect","useState","API","Navbar","useNavigate","FaEdit","FaTrashAlt","jsxDEV","_jsxDEV","DashboardPage","_s","notes","setNotes","user","setUser","navigate","fetchNotes","data","get","error","_error$response","console","response","message","fetchUserProfile","_error$response2","handleNote","noteId","title","content","category","isEditable","log","state","handleDeleteNote","window","confirm","delete","filter","note","_id","alert","_error$response3","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","JSON","stringify","length","map","_c","$RefreshReg$"],"sources":["C:/Users/New/NotesApp/frontend/src/pages/DashboardPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport API from '../api/api'; // Import API to make requests\r\nimport Navbar from '../components/Navbar'; // Import the Navbar component\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for routing\r\nimport { FaEdit, FaTrashAlt } from 'react-icons/fa';\r\n\r\n\r\nconst DashboardPage = () => {\r\n    const [notes, setNotes] = useState([]); // Store the fetched notes\r\n    const [user, setUser] = useState(null); // Store user information\r\n    const navigate = useNavigate(); // Initialize useNavigate for routing\r\n\r\n    useEffect(() => {\r\n        const fetchNotes = async () => {\r\n            try {\r\n                const { data } = await API.get('/notes'); // Get notes from API\r\n                setNotes(data); // Store notes in state\r\n            } catch (error) {\r\n                console.error('Failed to fetch notes:', error.response?.data || error.message);\r\n            }\r\n        };\r\n\r\n        const fetchUserProfile = async () => {\r\n            try {\r\n                const { data } = await API.get('/profile'); // Fetch user profile\r\n                setUser(data); // Set user data to state\r\n            } catch (error) {\r\n                console.error('Failed to fetch user profile:', error.response?.data || error.message);\r\n            }\r\n        };\r\n\r\n        fetchNotes(); // Fetch notes when the page loads\r\n        fetchUserProfile(); // Fetch user data when the page loads\r\n    }, []);\r\n\r\n    \r\n    const handleNote = (noteId, title, content, category, isEditable) => {\r\n        console.log(title);\r\n        navigate(`/note/edit/${noteId}`, {\r\n            state: { title, content, category, isEditable } // Pass the state object\r\n        }); // Redirect to Edit Note page\r\n    };\r\n    \r\n    const handleDeleteNote = async (noteId) => {\r\n        if (window.confirm('Are you sure you want to delete this note?')) {\r\n            try {\r\n                await API.delete(`/notes/${noteId}`); // Call API to delete the note\r\n                setNotes(notes.filter((note) => note._id !== noteId)); // Remove the deleted note from state\r\n                alert('Note deleted successfully!');\r\n            } catch (error) {\r\n                console.error('Failed to delete note:', error.response?.data || error.message);\r\n                alert('Failed to delete note. Please try again.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar user={user} />\r\n\r\n            <div className=\"p-6\">\r\n                <h2 className=\"text-3xl font-bold mb-6 text-gray-800\">Your Notes</h2>\r\n\r\n                <button\r\n                    onClick={handleNote}\r\n                    className=\"bg-blue-600 text-white py-3 px-5 rounded mb-6 hover:bg-blue-700\"\r\n                >\r\n                    + Create New Note\r\n                </button>\r\n{console.log(JSON.stringify(notes))}\r\n                {notes.length > 0 ? (\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                        {notes.map((note) => (\r\n                            <div\r\n                                key={note._id}\r\n                                className=\"bg-white p-4 rounded shadow hover:shadow-lg transition\"\r\n                            >\r\n                                <h3 className=\"font-bold text-xl text-gray-700\">{note.title}</h3>\r\n                                <p className=\"text-gray-600 mt-2\">{note.content}</p>\r\n                                <div className=\"mt-4 flex justify-between\">\r\n                                <button\r\n    onClick={() => handleNote(note._id, note.title, note.content, note.category, true)}\r\n    className=\"text-green-500 hover:text-green-700\"\r\n>\r\n    <FaEdit className=\"inline-block text-xl\" /> {/* Edit Icon */}\r\n</button>\r\n\r\n                                    <button\r\n                                        onClick={() => handleDeleteNote(note._id)}\r\n                                        className=\"text-red-500 underline\"\r\n                                    >\r\n                                        Delete\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                    <p className=\"text-gray-500 mt-4\">No notes found. Create your first note!</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}