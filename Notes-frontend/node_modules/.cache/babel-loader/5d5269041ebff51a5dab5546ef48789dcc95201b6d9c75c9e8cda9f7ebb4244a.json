{"ast":null,"code":"import axios from 'axios';\n\n// Set up the base URL for the API\nconst API = axios.create({\n  baseURL: 'http://localhost:5000/api'\n});\n\n// Add an interceptor to attach the token to each request\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token'); // Retrieve the token from local storage\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`; // Attach the token to the request header\n  }\n  return config;\n}, error => {\n  // Handle request errors\n  console.error('Error in request interceptor:', error);\n  return Promise.reject(error);\n});\n\n// Notes API\nexport const fetchNotes = async () => {\n  try {\n    const response = await API.get('/notes');\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Error fetching notes:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\nexport const createNote = async noteData => {\n  try {\n    const response = await API.post('/notes', noteData);\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error('Error creating note:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};\nexport const updateNote = async (id, noteData) => {\n  try {\n    const response = await API.put(`/notes/${id}`, noteData);\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error('Error updating note:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw error;\n  }\n};\nexport const deleteNote = async id => {\n  try {\n    const response = await API.delete(`/notes/${id}`);\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    console.error('Error deleting note:', ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n    throw error;\n  }\n};\n\n// User Authentication API (Add as needed)\nexport const registerUser = async userData => {\n  try {\n    const response = await API.post('/auth/register', userData);\n    return response.data;\n  } catch (error) {\n    var _error$response5;\n    console.error('Error registering user:', ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw error;\n  }\n};\nexport const loginUser = async userData => {\n  try {\n    const response = await API.post('/auth/login', userData);\n    return response.data;\n  } catch (error) {\n    var _error$response6;\n    console.error('Error logging in user:', ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n    throw error;\n  }\n};\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","console","Promise","reject","fetchNotes","response","get","data","_error$response","message","createNote","noteData","post","_error$response2","updateNote","id","put","_error$response3","deleteNote","delete","_error$response4","registerUser","userData","_error$response5","loginUser","_error$response6"],"sources":["C:/Users/New/NotesApp/frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Set up the base URL for the API\r\nconst API = axios.create({ baseURL: 'http://localhost:5000/api' });\r\n\r\n// Add an interceptor to attach the token to each request\r\nAPI.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem('token'); // Retrieve the token from local storage\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`; // Attach the token to the request header\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        // Handle request errors\r\n        console.error('Error in request interceptor:', error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Notes API\r\nexport const fetchNotes = async () => {\r\n    try {\r\n        const response = await API.get('/notes');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching notes:', error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const createNote = async (noteData) => {\r\n    try {\r\n        const response = await API.post('/notes', noteData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error creating note:', error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateNote = async (id, noteData) => {\r\n    try {\r\n        const response = await API.put(`/notes/${id}`, noteData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error updating note:', error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const deleteNote = async (id) => {\r\n    try {\r\n        const response = await API.delete(`/notes/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error deleting note:', error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// User Authentication API (Add as needed)\r\nexport const registerUser = async (userData) => {\r\n    try {\r\n        const response = await API.post('/auth/register', userData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error registering user:', error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const loginUser = async (userData) => {\r\n    try {\r\n        const response = await API.post('/auth/login', userData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error logging in user:', error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport default API;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}